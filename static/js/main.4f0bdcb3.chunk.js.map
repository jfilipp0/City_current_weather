{"version":3,"sources":["components/city/index.js","utilities/weatherConditions .js","components/weather/index.js","components/main/index.js","router.js","App.js","reportWebVitals.js","index.js"],"names":["scene","camera","renderer","cube","weatherConditions","Rain","title","subtitle","icon","Clear","Thunderstorm","Clouds","Snow","Drizzle","Haze","Mist","Weather","state","className","location","countrylocation","weatherCondition","temperature","feelsLike","tempmin","tempmax","City","props","animate","bind","THREE","background","window","innerWidth","innerHeight","setSize","geometry","material","color","wireframe","add","position","z","domElement","requestAnimationFrame","this","rotation","x","y","render","document","getElementById","appendChild","init","id","Component","Main","isLoading","sunrise","sunset","navigator","geolocation","getCurrentPosition","fetchWeather","coords","latitude","longitude","error","setState","lat","lon","a","fetch","method","cache","then","res","json","data","console","log","name","sys","country","float2int","main","temp","feels_like","temp_min","temp_max","weather","value","Math","ceil","Routes","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4f0bdcb3.chunk.js","sourcesContent":["import \"./city.css\"\r\nimport React, { Component } from \"react\"\r\nimport * as THREE from 'three'\r\n\r\n\r\nlet scene, camera, renderer, cube\r\nclass City extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.animate = this.animate.bind(this)\r\n  }\r\n    \r\n  init() {\r\n    //creating scene\r\n    scene = new THREE.Scene()\r\n    scene.background = new THREE.Color(0x2a3b4c)\r\n\r\n    //add camera\r\n    camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight\r\n    )\r\n\r\n    //renderer\r\n    renderer = new THREE.WebGLRenderer()\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    //document.body.appendChild(renderer.domElement)\r\n\r\n    //add geometry\r\n    var geometry = new THREE.BoxGeometry()\r\n    var material = new THREE.MeshBasicMaterial({\r\n      color: 0x00ff00,\r\n      wireframe: true,\r\n    })\r\n    cube = new THREE.Mesh(geometry, material)\r\n\r\n    scene.add(cube)\r\n\r\n    camera.position.z = 5\r\n\r\n    return renderer.domElement\r\n  }\r\n\r\n  //animation\r\n  animate() {\r\n    requestAnimationFrame(this.animate)\r\n\r\n    cube.rotation.x += 0.008\r\n    cube.rotation.y += 0.008\r\n\r\n    renderer.render(scene, camera)\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById(\"Render\").appendChild(this.init())\r\n    this.animate()\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"Render\" className=\"webgl\"></div>\r\n  }\r\n\r\n}\r\n\r\nexport default City\r\n","export const weatherConditions = {\r\n    Rain: {\r\n        title: 'Raining',\r\n        subtitle: 'Grab a cup of coffee',\r\n        icon: 'wi-storm-showers'\r\n    },\r\n    Clear: {\r\n        title: 'Super Sunny',\r\n        subtitle: 'Wear sunglasses!',\r\n        icon: 'wi-day-sunny'\r\n    },\r\n    Thunderstorm: {\r\n        title: 'A Storm is coming',\r\n        subtitle: 'Better get inside!',\r\n        icon: 'wi-thunderstorm'\r\n    },\r\n    Clouds: {\r\n        title: 'Cloudy',\r\n        subtitle: 'With a chance of drizzle or rain',\r\n        icon: 'wi-cloudy'\r\n    },\r\n\r\n    Snow: {\r\n        title: 'Snow',\r\n        subtitle: 'Get out and build a snowman!',\r\n        icon: 'wi-snow'\r\n    },\r\n    Drizzle: {\r\n        title: 'Drizzle',\r\n        subtitle: 'Partially raining...',\r\n        icon: 'wi-sleet'\r\n    },\r\n    Haze: {\r\n        title: 'Haze',\r\n        subtitle: 'Another name for Partly Raining',\r\n        icon: 'wi-cloudy-windy'\r\n    },\r\n    Mist: {\r\n        title: 'Mist',\r\n        subtitle: \"Microscopic water droplets\",\r\n        icon: 'wi-sleet'\r\n    }\r\n}\r\n","import \"./weather.css\"\r\nimport React from 'react'\r\n\r\nimport { weatherConditions } from \"../../utilities/weatherConditions \";\r\n\r\nconst Weather = ({ state }) => {\r\n\r\n    return (\r\n        <div className=\"weatherContainer\">\r\n            <div className=\"headerContainer\">\r\n                <h2 className=\"title\">\r\n                    {state.location}, {state.countrylocation}\r\n                </h2>\r\n            </div>\r\n            <div className=\"headerContainer\">\r\n                <h1>\r\n                    <i className={`wi ${weatherConditions[state?.weatherCondition]?.icon} display-1`} />\r\n                </h1>\r\n            </div>\r\n            <div className=\"bodyContainer\">\r\n                <p className=\"title\">{weatherConditions[state?.weatherCondition]?.title}</p>\r\n                <p className=\"subtitle\">{weatherConditions[state?.weatherCondition]?.subtitle}</p>\r\n            </div>\r\n\r\n            <div className=\"headerContainer\">\r\n                <h1 className=\"tempText\">{state?.temperature}&deg;</h1>\r\n            </div>\r\n\r\n            <div className=\"headerContainer\">\r\n                <h2 className=\"title\">feels like: {state?.feelsLike}&deg;</h2>\r\n            </div>\r\n            <div className=\"bodyContainer\">\r\n                <p className=\"subtitle\">\r\n                    [min]: {state?.tempmin}&deg; [max]: {state?.tempmax}&deg;\r\n                </p>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n","import \"./main.css\"\r\nimport React, { Component } from \"react\"\r\n\r\nimport Weather from \"../weather\"\r\nimport City from \"../city\"\r\n\r\nconst URL_API = \"https://api.openweathermap.org/data/2.5/weather\"\r\nconst KEY = \"1e14c9961b01b549746bff384ab999ba\"\r\n\r\nexport default class Main extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    location: null,\r\n    countrylocation: null,\r\n    temperature: 0,\r\n    feelsLike: 0,\r\n    tempmin: 0,\r\n    tempmax: 0,\r\n    weatherCondition: null,\r\n    sunrise: 0,\r\n    sunset: 0\r\n  }\r\n  \r\n   componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        // if you give your current position\r\n        this.fetchWeather(position.coords.latitude, position.coords.longitude)\r\n      },\r\n      error => {\r\n        // if you not give your position will appear the London, GB position\r\n        this.fetchWeather(51.5072, -0.1276) \r\n        this.setState({\r\n          error: 'Error Retriving Weather Conditions'\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  async fetchWeather(lat, lon) {\r\n    if (lat === null || lon === null ){\r\n      lat = 53.344\r\n      lon = -6.2672\r\n    }\r\n    await fetch(`${URL_API}?lat=${lat}&lon=${lon}&APPID=${KEY}&units=metric`,{\r\n      method: 'GET',\r\n      cache: 'no-cache',\r\n    })\r\n      .then( (res) => res.json())\r\n      .then( (data) => {\r\n        console.log(data)\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          location: data.name,\r\n          countrylocation: data.sys.country,\r\n          temperature: this.float2int(data.main.temp),\r\n          feelsLike: this.float2int(data.main.feels_like),\r\n          tempmin: this.float2int(data.main.temp_min),\r\n          tempmax: this.float2int(data.main.temp_max),\r\n          weatherCondition: data.weather[0].main,\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset\r\n          })\r\n      })\r\n  }\r\n\r\n  float2int(value) {\r\n    return Math.ceil(value) | 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loadingContainer\">\r\n              <h3 className=\"loadingText\">Fetching Your Weather</h3> \r\n          </div>\r\n          ) : (\r\n          <div>\r\n              <Weather state={this.state} />\r\n              <City/>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Main from './components/main'\r\n\r\n\r\n\r\nexport default function Routes() {\r\n    return (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path='/' exact component={Main} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n    )\r\n}","import './App.css'\nimport React, { Component } from \"react\"\nimport Routes from './router'\n\n// git project https://github.com/erikflowers/weather-icons\nimport \"weather-icons/css/weather-icons.css\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div id=\"Render\" className=\"App\">\n        <Routes />\n      </div>)\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}